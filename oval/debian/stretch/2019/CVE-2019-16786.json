{
  "ID": "oval:org.debian:def:201916786",
  "Class": "vulnerability",
  "Metadata": {
    "Title": "CVE-2019-16786",
    "AffectedList": [
      {
        "Family": "unix",
        "Platform": "Debian GNU/Linux 9",
        "Product": "waitress"
      }
    ],
    "References": [
      {
        "Source": "CVE",
        "RefID": "CVE-2019-16786",
        "RefURL": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16786"
      }
    ],
    "Description": "Waitress through version 1.3.1 would parse the Transfer-Encoding header and only look for a single string value, if that value was not chunked it would fall through and use the Content-Length header instead. According to the HTTP standard Transfer-Encoding should be a comma separated list, with the inner-most encoding first, followed by any further transfer codings, ending with chunked. Requests sent with: \"Transfer-Encoding: gzip, chunked\" would incorrectly get ignored, and the request would use a Content-Length header instead to determine the body size of the HTTP message. This could allow for Waitress to treat a single request as multiple requests in the case of HTTP pipelining. This issue is fixed in Waitress 1.4.0.",
    "Debian": {
      "MoreInfo": ""
    }
  },
  "Criteria": {
    "Operator": "AND",
    "Criterias": [
      {
        "Operator": "OR",
        "Criterias": [
          {
            "Operator": "AND",
            "Criterias": null,
            "Criterions": [
              {
                "Negate": false,
                "TestRef": "oval:org.debian.oval:tst:2",
                "Comment": "all architecture"
              },
              {
                "Negate": false,
                "TestRef": "oval:org.debian.oval:tst:20119",
                "Comment": "waitress DPKG is earlier than 0"
              }
            ]
          }
        ],
        "Criterions": null
      }
    ],
    "Criterions": [
      {
        "Negate": false,
        "TestRef": "oval:org.debian.oval:tst:1",
        "Comment": "Debian 9 is installed"
      }
    ]
  }
}