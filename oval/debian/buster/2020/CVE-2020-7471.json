{
  "ID": "oval:org.debian:def:20207471",
  "Class": "vulnerability",
  "Metadata": {
    "Title": "CVE-2020-7471",
    "AffectedList": [
      {
        "Family": "unix",
        "Platform": "Debian GNU/Linux 10",
        "Product": "python-django"
      }
    ],
    "References": [
      {
        "Source": "CVE",
        "RefID": "CVE-2020-7471",
        "RefURL": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7471"
      }
    ],
    "Description": "Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",
    "Debian": {
      "MoreInfo": "\nDSA-4629\nSimon Charette discovered that Django, a high-level Python web\ndevelopment framework, did not properly handle input in its PostgreSQL\nmodule. A remote attacker could leverage this to perform SQL injection\nattacks.\n"
    }
  },
  "Criteria": {
    "Operator": "AND",
    "Criterias": [
      {
        "Operator": "OR",
        "Criterias": [
          {
            "Operator": "AND",
            "Criterias": null,
            "Criterions": [
              {
                "Negate": false,
                "TestRef": "oval:org.debian.oval:tst:2",
                "Comment": "all architecture"
              },
              {
                "Negate": false,
                "TestRef": "oval:org.debian.oval:tst:21292",
                "Comment": "python-django DPKG is earlier than 1:1.11.28-1~deb10u1"
              }
            ]
          }
        ],
        "Criterions": null
      }
    ],
    "Criterions": [
      {
        "Negate": false,
        "TestRef": "oval:org.debian.oval:tst:1",
        "Comment": "Debian 10 is installed"
      }
    ]
  }
}