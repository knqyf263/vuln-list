{
  "ID": "oval:org.debian:def:20113131",
  "Class": "vulnerability",
  "Metadata": {
    "Title": "CVE-2011-3131",
    "AffectedList": [
      {
        "Family": "unix",
        "Platform": "Debian GNU/Linux 10",
        "Product": "xen"
      }
    ],
    "References": [
      {
        "Source": "CVE",
        "RefID": "CVE-2011-3131",
        "RefURL": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3131"
      }
    ],
    "Description": "Xen 4.1.1 and earlier allows local guest OS kernels with control of a PCI[E] device to cause a denial of service (CPU consumption and host hang) via many crafted DMA requests that are denied by the IOMMU, which triggers a livelock.",
    "Debian": {
      "MoreInfo": "\nDSA-2582\nMultiple denial of service vulnerabilities have been discovered\nin the Xen Hypervisor. One of the issue\n(\u003ca href=\"https://security-tracker.debian.org/tracker/CVE-2012-5513\"\u003eCVE-2012-5513\u003c/a\u003e)\ncould even lead to privilege escalation from guest to host.\nSome of the recently published Xen Security Advisories\n(\u003ca href=\"http://lists.xen.org/archives/html/xen-announce/2012-11/msg00006.html\"\u003eXSA 25\u003c/a\u003e\nand \u003ca href=\"http://lists.xen.org/archives/html/xen-announce/2012-12/msg00003.html\"\u003e28\u003c/a\u003e)\nare not fixed by this update and should be fixed in a future release.\nA VM that controls a PCI[E] device directly can cause it to issue DMA\n\trequests to invalid addresses. Although these requests are denied by the\n\tI/OMMU, the hypervisor needs to handle the interrupt and clear the error from\n\tthe I/OMMU, and this can be used to live-lock a CPU and potentially hang the\n\thost.\nA guest which sets a VCPU with an inappropriate deadline can cause an\n\tinfinite loop in Xen, blocking the affected physical CPU indefinitely.\nWhen set_p2m_entry fails, Xen's internal data structures (the p2m and m2p\n\ttables) can get out of sync. This failure can be triggered by unusual guest\n\tbehaviour exhausting the memory reserved for the p2m table. If it happens,\n\tsubsequent guest-invoked memory operations can cause Xen to fail an assertion\n\tand crash.\nThe HVMOP_pagetable_dying hypercall does not correctly check the\n\tcaller's pagetable state, leading to a hypervisor crash.\nDue to inappropriate duplicate use of the same loop control variable,\n\tpassing bad arguments to GNTTABOP_get_status_frames can cause an\n\tinfinite loop in the compat hypercall handler.\nDowngrading the grant table version of a guest involves freeing its status\n\tpages. This freeing was incomplete - the page(s) are freed back to the\n\tallocator, but not removed from the domain's tracking list. This would cause\n\tlist corruption, eventually leading to a hypervisor crash.\nThe handler for XENMEM_exchange accesses guest memory without range checking\n\tthe guest provided addresses, thus allowing these accesses to include the\n\thypervisor reserved range.\nA malicious guest administrator can cause Xen to crash. If the out of address\n\tspace bounds access does not lead to a crash, a carefully crafted privilege\n\tescalation cannot be excluded, even though the guest doesn't itself control\n\tthe values written.\nguest_physmap_mark_populate_on_demand(), before carrying out its actual\n\toperation, checks that the subject GFNs are not in use. If that check fails,\n\tthe code prints a message and bypasses the gfn_unlock() matching the\n\tgfn_lock() carried out before entering the loop.\n\tA malicious guest administrator can then use it to cause Xen to hang.\nAllowing arbitrary extent_order input values for XENMEM_decrease_reservation,\n\tXENMEM_populate_physmap, and XENMEM_exchange can cause arbitrarily long time\n\tbeing spent in loops without allowing vital other code to get a chance to\n\texecute. This may also cause inconsistent state resulting at the completion\n\tof these hypercalls.\n"
    }
  },
  "Criteria": {
    "Operator": "AND",
    "Criterias": [
      {
        "Operator": "OR",
        "Criterias": [
          {
            "Operator": "AND",
            "Criterias": null,
            "Criterions": [
              {
                "Negate": false,
                "TestRef": "oval:org.debian.oval:tst:2",
                "Comment": "all architecture"
              },
              {
                "Negate": false,
                "TestRef": "oval:org.debian.oval:tst:4912",
                "Comment": "xen DPKG is earlier than 4.1.3-6"
              }
            ]
          }
        ],
        "Criterions": null
      }
    ],
    "Criterions": [
      {
        "Negate": false,
        "TestRef": "oval:org.debian.oval:tst:1",
        "Comment": "Debian 10 is installed"
      }
    ]
  }
}