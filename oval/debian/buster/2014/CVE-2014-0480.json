{
  "ID": "oval:org.debian:def:20140480",
  "Class": "vulnerability",
  "Metadata": {
    "Title": "CVE-2014-0480",
    "AffectedList": [
      {
        "Family": "unix",
        "Platform": "Debian GNU/Linux 10",
        "Product": "python-django"
      }
    ],
    "References": [
      {
        "Source": "CVE",
        "RefID": "CVE-2014-0480",
        "RefURL": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0480"
      }
    ],
    "Description": "The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.",
    "Debian": {
      "MoreInfo": "\nDSA-3010\nSeveral vulnerabilities were discovered in Django, a high-level Python\nweb development framework. The Common Vulnerabilities and Exposures\nproject identifies the following problems:\nFlorian Apolloner discovered that in certain situations, URL\n    reversing could generate scheme-relative URLs which could\n    unexpectedly redirect a user to a different host, leading to\n    phishing attacks.\nDavid Wilson reported a file upload denial of service vulnerability.\n    Django's file upload handling in its default configuration may\n    degrade to producing a huge number of `os.stat()` system calls when\n    a duplicate filename is uploaded. A remote attacker with the ability\n    to upload files can cause poor performance in the upload handler,\n    eventually causing it to become very slow.\nDavid Greisen discovered that under some circumstances, the use of\n    the RemoteUserMiddleware middleware and the RemoteUserBackend\n    authentication backend could result in one user receiving another\n    user's session, if a change to the REMOTE_USER header occurred\n    without corresponding logout/login actions.\nCollin Anderson discovered that it is possible to reveal any field's\n    data by modifying the \u003cq\u003epopup\u003c/q\u003e and \u003cq\u003eto_field\u003c/q\u003e parameters of the query\n    string on an admin change form page. A user with access to the admin\n    interface, and with sufficient knowledge of model structure and the\n    appropriate URLs, could construct popup views which would display\n    the values of non-relationship fields, including fields the\n    application developer had not intended to expose in such a fashion.\n"
    }
  },
  "Criteria": {
    "Operator": "AND",
    "Criterias": [
      {
        "Operator": "OR",
        "Criterias": [
          {
            "Operator": "AND",
            "Criterias": null,
            "Criterions": [
              {
                "Negate": false,
                "TestRef": "oval:org.debian.oval:tst:2",
                "Comment": "all architecture"
              },
              {
                "Negate": false,
                "TestRef": "oval:org.debian.oval:tst:7456",
                "Comment": "python-django DPKG is earlier than 1.6.6-1"
              }
            ]
          }
        ],
        "Criterions": null
      }
    ],
    "Criterions": [
      {
        "Negate": false,
        "TestRef": "oval:org.debian.oval:tst:1",
        "Comment": "Debian 10 is installed"
      }
    ]
  }
}