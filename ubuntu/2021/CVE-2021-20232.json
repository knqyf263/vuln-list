{
  "PublicDateAtUSN": "0001-01-01T00:00:00Z",
  "CRD": "0001-01-01T00:00:00Z",
  "Candidate": "CVE-2021-20232",
  "PublicDate": "2021-03-12T00:00:00Z",
  "References": [
    "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-20232",
    "https://www.gnutls.org/security-new.html#GNUTLS-SA-2021-03-10"
  ],
  "Description": "Use after free in client_send_params in lib/ext/pre_shared_key.c It was found that the client sending a \"key_share\" or \"pre_share_key\" extension may result in dereferencing a pointer no longer valid after realloc(). This only happens in TLS 1.3 and only when the client sends a large Client Hello message, e.g., when HRR is sent in a resumed session previously negotiated large FFDHE parameters, because the initial allocation of the buffer is large enough without having to call realloc().",
  "UbuntuDescription": "",
  "Notes": null,
  "Bugs": [
    "https://gitlab.com/gnutls/gnutls/-/issues/1151"
  ],
  "Priority": "low",
  "DiscoveredBy": "",
  "AssignedTo": "",
  "Patches": {
    "gnutls28": {
      "bionic": {
        "Status": "not-affected",
        "Note": "code not present"
      },
      "devel": {
        "Status": "needed",
        "Note": ""
      },
      "focal": {
        "Status": "needed",
        "Note": ""
      },
      "groovy": {
        "Status": "needed",
        "Note": ""
      },
      "precise/esm": {
        "Status": "DNE",
        "Note": ""
      },
      "trusty": {
        "Status": "ignored",
        "Note": "out of standard support"
      },
      "trusty/esm": {
        "Status": "DNE",
        "Note": ""
      },
      "upstream": {
        "Status": "released",
        "Note": "3.7.1-1"
      },
      "xenial": {
        "Status": "not-affected",
        "Note": "code not present"
      }
    }
  },
  "UpstreamLinks": {
    "gnutls28": [
      "https://gitlab.com/gnutls/gnutls/-/commit/75a937d97f4fefc6f9b08e3791f151445f551cb3"
    ]
  }
}