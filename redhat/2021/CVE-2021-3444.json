{
  "affected_release": null,
  "package_state": null,
  "threat_severity": "Important",
  "public_date": "2021-02-13T00:00:00Z",
  "bugzilla": {
    "description": "CVE-2021-3444 kernel: bpf verifier incorrect mod32 truncation",
    "id": "1942667",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1942667"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.8",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-681-\u003e(CWE-125|CWE-787)",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2021-3444",
  "document_distribution": "",
  "details": [
    "The bpf verifier in the Linux kernel did not properly handle mod32 destination register truncation when the source register was known to be 0. A local attacker with the ability to load bpf programs could use this gain out-of-bounds reads in kernel memory leading to information disclosure (kernel memory), and possibly out-of-bounds writes that could potentially lead to code execution. This issue was addressed in the upstream kernel in commit 9b00f1b78809 (\"bpf: Fix truncation handling for mod32 dst reg wrt zero\") and in Linux stable kernels 5.11.2, 5.10.19, and 5.4.101."
  ],
  "references": null
}