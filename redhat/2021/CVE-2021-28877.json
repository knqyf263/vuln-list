{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Developer Tools",
      "fix_state": "Affected",
      "package_name": "rust",
      "cpe": "cpe:/a:redhat:devtools:"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Affected",
      "package_name": "rust-toolset:rhel8/rust",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2021-01-16T00:00:00Z",
  "bugzilla": {
    "description": "CVE-2021-28877 rust: memory safety violation in Zip implementation for nested iter::Zips",
    "id": "1949204",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1949204"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2021-28877",
  "document_distribution": "",
  "details": [
    "In the standard library in Rust before 1.51.0, the Zip implementation calls __iterator_get_unchecked() for the same index more than once when nested. This bug can lead to a memory safety violation due to an unmet safety requirement for the TrustedRandomAccess trait."
  ],
  "references": null
}