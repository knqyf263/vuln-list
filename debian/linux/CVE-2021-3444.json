{
  "description": "The bpf verifier in the Linux kernel did not properly handle mod32 destination register truncation when the source register was known to be 0. A local attacker with the ability to load bpf programs could use this gain out-of-bounds reads in kernel memory leading to information disclosure (kernel memory), and possibly out-of-bounds writes that could potentially lead to code execution. This issue was addressed in the upstream kernel in commit 9b00f1b78809 (\"bpf: Fix truncation handling for mod32 dst reg wrt zero\") and in Linux stable kernels 5.11.2, 5.10.19, and 5.4.101.",
  "releases": {
    "bullseye": {
      "fixed_version": "5.10.19-1",
      "repositories": {
        "bullseye": "5.10.24-1"
      },
      "status": "resolved",
      "urgency": "not yet assigned"
    },
    "buster": {
      "repositories": {
        "buster": "4.19.181-1",
        "buster-security": "4.19.171-2"
      },
      "status": "open",
      "urgency": "not yet assigned"
    },
    "sid": {
      "fixed_version": "5.10.19-1",
      "repositories": {
        "sid": "5.10.26-1"
      },
      "status": "resolved",
      "urgency": "not yet assigned"
    },
    "stretch": {
      "fixed_version": "0",
      "repositories": {
        "stretch": "4.9.228-1",
        "stretch-security": "4.9.258-1"
      },
      "status": "resolved",
      "urgency": "unimportant"
    }
  },
  "scope": "local"
}