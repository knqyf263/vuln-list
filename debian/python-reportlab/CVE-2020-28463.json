{
  "description": "All versions of package reportlab are vulnerable to Server-side Request Forgery (SSRF) via img tags. In order to reduce risk, use trustedSchemes \u0026 trustedHosts (see in Reportlab's documentation) Steps to reproduce by Karan Bamal: 1. Download and install the latest package of reportlab 2. Go to demos -\u003e odyssey -\u003e dodyssey 3. In the text file odyssey.txt that needs to be converted to pdf inject \u003cimg src=\"http://127.0.0.1:5000\" valign=\"top\"/\u003e 4. Create a nc listener nc -lp 5000 5. Run python3 dodyssey.py 6. You will get a hit on your nc showing we have successfully proceded to send a server side request 7. dodyssey.py will show error since there is no img file on the url, but we are able to do SSRF",
  "releases": {
    "bullseye": {
      "repositories": {
        "bullseye": "3.5.59-1"
      },
      "status": "open",
      "urgency": "not yet assigned"
    },
    "buster": {
      "nodsa": "Minor issue",
      "nodsa_reason": "",
      "repositories": {
        "buster": "3.5.13-1+deb10u1",
        "buster-security": "3.5.13-1+deb10u1"
      },
      "status": "open",
      "urgency": "not yet assigned"
    },
    "sid": {
      "repositories": {
        "sid": "3.5.59-2"
      },
      "status": "open",
      "urgency": "not yet assigned"
    },
    "stretch": {
      "nodsa": "Can be fixed in next DLA",
      "nodsa_reason": "postponed",
      "repositories": {
        "stretch": "3.3.0-2+deb9u1",
        "stretch-security": "3.3.0-2+deb9u1"
      },
      "status": "open",
      "urgency": "not yet assigned"
    }
  },
  "scope": "local"
}