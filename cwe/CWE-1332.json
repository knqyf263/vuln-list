{
 "ID": 1332,
 "Name": "Insufficient Protection Against Instruction Skipping Via Fault Injection",
 "Description": "The device is missing or incorrectly\n                implements circuitry or sensors to detect and mitigate CPU\n                instruction skips that can be caused by fault injection.",
 "PotentialMitigations": {
  "Mitigation": [
   {
    "Phase": [
     "Architecture and Design"
    ],
    "Strategy": "",
    "Description": null
   },
   {
    "Phase": [
     "Architecture and Design"
    ],
    "Strategy": "",
    "Description": null
   },
   {
    "Phase": [
     "Implementation"
    ],
    "Strategy": "",
    "Description": null
   }
  ]
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": [
   {
    "CAPECID": 624
   }
  ]
 },
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Confidentiality",
     "Integrity",
     "Authentication"
    ],
    "Impact": [
     "Bypass Protection Mechanism",
     "Alter Execution Logic",
     "Unexpected State"
    ]
   }
  ]
 },
 "ExtendedDescription": [
  "Fault Injection is a technique used by adversaries to\n                    alter the operating conditions of hardware so that\n                    unexpected behavior occurs. Generally, this is accomplished by causing the\n                    device to operate outside of its expected conditions or by\n                    inducing electrical disturbances in the device. A weakness\n                    may arise in systems that do not properly protect\n                    against common fault injection techniques targeting the\n                    skipping of security critical instructions.",
  "In practice, application code may contain conditional\n                    branches that are security-sensitive (e.g., \n                    accepting or rejecting a user-provided password. These\n                    conditional branches are typically implemented by a single\n                    conditional branch instruction in the program binary\n                    which, if skipped through fault injection, may lead to\n                    effectively flipping the branch condition - i.e., causing\n                    the wrong security-sensitive branch to be taken. This\n                    affects processes such as firmware authentication, password\n                    verification, and other security-sensitive decision\n                    points."
 ]
}