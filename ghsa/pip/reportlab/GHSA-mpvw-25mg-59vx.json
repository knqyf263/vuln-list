{
  "Severity": "MODERATE",
  "UpdatedAt": "2021-03-19T22:06:18Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "reportlab"
  },
  "Advisory": {
    "DatabaseId": 3489,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLW1wdnctMjVtZy01OXZ4",
    "GhsaId": "GHSA-mpvw-25mg-59vx",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2020-28463"
      },
      {
        "Url": "https://github.com/advisories/GHSA-mpvw-25mg-59vx"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-mpvw-25mg-59vx"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2020-28463"
      }
    ],
    "Description": "All versions of package reportlab at time of writing are vulnerable to Server-side Request Forgery (SSRF) via img tags. In order to reduce risk, use trustedSchemes \u0026 trustedHosts (see in Reportlab's documentation) Steps to reproduce by Karan Bamal: 1. Download and install the latest package of reportlab 2. Go to demos -\u003e odyssey -\u003e dodyssey 3. In the text file odyssey.txt that needs to be converted to pdf inject \u003cimg src=\"http://127.0.0.1:5000\" valign=\"top\"/\u003e 4. Create a nc listener nc -lp 5000 5. Run python3 dodyssey.py 6. You will get a hit on your nc showing we have successfully proceded to send a server side request 7. dodyssey.py will show error since there is no img file on the url, but we are able to do SSRF",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-03-29T16:32:27Z",
    "Severity": "MODERATE",
    "Summary": "Server-side Request Forgery (SSRF) via img tags in reportlab",
    "UpdatedAt": "2021-03-29T16:32:27Z",
    "WithdrawnAt": ""
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003e= 3.5.55, \u003c= 3.5.66"
    }
  ]
}