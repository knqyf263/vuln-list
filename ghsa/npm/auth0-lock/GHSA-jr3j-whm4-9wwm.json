{
  "Severity": "HIGH",
  "UpdatedAt": "2021-06-04T18:28:08Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "auth0-lock"
  },
  "Advisory": {
    "DatabaseId": 4745,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWpyM2otd2htNC05d3dt",
    "GhsaId": "GHSA-jr3j-whm4-9wwm",
    "References": [
      {
        "Url": "https://github.com/auth0/lock/security/advisories/GHSA-jr3j-whm4-9wwm"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32641"
      },
      {
        "Url": "https://github.com/advisories/GHSA-jr3j-whm4-9wwm"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-jr3j-whm4-9wwm"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-32641"
      }
    ],
    "Description": "### Overview\n\nVersions before and including `11.30.0` are vulnerable to reflected XSS.  An attacker can execute arbitrary code when the library's\n- `flashMessage` feature is utilized and user input or data from URL parameters is incorporated into the `flashMessage`.\n- `languageDictionary` feature is utilized and user input or data from URL parameters is incorporated into the `languageDictionary`.\n\n### Am I affected?\nYou are affected by this vulnerability if you are using `auth0-lock` version `11.30.0` or lower and all of the following conditions apply:\n\n- You are utilizing `flashMessage` feature.\n- User input or data from URL parameters is incorporated into the `flashMessage`.\n\nAn example of a vulnerable snippet where query parameters are used to populate the `text` property of a `flashMessage`.\n```js\nvar params = new URLSearchParams(location.search);\nvar errorMessage = params.get('error__message');\nvar showParams = {};\n\nif (!!errorMessage === true) {\n  showParams.flashMessage = {\n    type: 'error',\n    text: 'We were unable to log you in. ' + errorMessage,\n  };\n}\n\nlock.show(showParams);\n```\n\nOR\n\n- You are utilizing `languageDictionary` feature.\n- User input or data from URL parameters is used in `languageDictionary` properties.\n\nAn example of a vulnerable snippet where query parameters are used to populate the `socialLoginInstructions` property of a `languageDictionary`.\n```js\nvar params = new URLSearchParams(location.search);\nvar instruction = params.get('instruction');\n\nvar options = {\n  languageDictionary: {\n    emailInputPlaceholder: \"something@youremail.com\",\n    title: \"title\",\n    socialLoginInstructions: instruction\n  },\n};\n\nvar lock = new Auth0LockPasswordless(\n    CLIENT_ID,\n    DOMAIN,\n    options\n);\n\nlock.show()\n```\n\n### How to fix that?\nUpgrade to version `11.30.1`.\n\n### Will this update impact my users?\nThe fix uses [DOMPurify](https://github.com/cure53/DOMPurify) to sanitise the `flashMessage` and `languageDictionary` inputs. If you are including inline JavaScript in these fields, like `script` tags or `onclick` attributes, these will be removed.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-06-04T19:10:34Z",
    "Severity": "HIGH",
    "Summary": "Reflected XSS when using flashMessages or languageDictionary",
    "UpdatedAt": "2021-06-07T18:54:44Z",
    "WithdrawnAt": ""
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "11.30.1"
      },
      "VulnerableVersionRange": "\u003c 11.30.1"
    }
  ]
}